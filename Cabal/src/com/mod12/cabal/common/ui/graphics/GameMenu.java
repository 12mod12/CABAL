/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GameMenu.java
 *
 * Created on Oct 14, 2012, 2:29:24 PM
 */

package com.mod12.cabal.common.ui.graphics;

import java.util.List;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

import com.mod12.cabal.common.Cabal;
import com.mod12.cabal.common.util.Graphics;

/**
 * TODO refactor DTO
 * @author reedh
 */
public class GameMenu extends javax.swing.JFrame {

    private Cabal cabal;
    private boolean myTurn;

    public GameMenu(Cabal cabal) {
        this.cabal = cabal;
        initComponents();
		updateLabels();
        drawMap();
        Graphics.centreWindow(this);
        
        labelMaxTurnValue.setText(cabal.getMaxTurn() + "");
    }
    
    // TODO bad to have hardcored strings!!!
    private void drawMap() {	
		ImageIcon map = new ImageIcon(cabal.getImageLocation() + "MAP.jpg", "");
    	labelMap.setIcon(map);
    	labelMap.setText("");
	}

	/** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        buttonMap = new javax.swing.JButton();
        buttonMission = new javax.swing.JButton();
        buttonFaction = new javax.swing.JButton();
        buttonOptions = new javax.swing.JButton();
        buttonSave = new javax.swing.JButton();
        buttonQuit = new javax.swing.JButton();
        buttonEndTurn = new javax.swing.JButton();
        buttonActiveMission = new javax.swing.JButton();
        buttonStats = new javax.swing.JButton();
        labelMap = new javax.swing.JLabel();
        labelFactionCaption = new javax.swing.JLabel();
        labelCurrentFactionNameValue = new javax.swing.JLabel();
        labelCurrentTurn = new javax.swing.JLabel();
        labelCurrentTurnValue = new javax.swing.JLabel();
        labelMaxTurn = new javax.swing.JLabel();
        labelMaxTurnValue = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonMap.setText("Locations");
        buttonMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMapActionPerformed(evt);
            }
        });

        buttonMission.setText("Missions");
        buttonMission.setEnabled(false);
        buttonMission.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMissionActionPerformed(evt);
            }
        });

        buttonFaction.setText("Faction");
        buttonFaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFactionActionPerformed(evt);
            }
        });

        buttonOptions.setText("Options");
        buttonOptions.setEnabled(false);

        buttonSave.setText("Save");
        buttonSave.setEnabled(false);

        buttonQuit.setText("Quit");
        buttonQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonQuitActionPerformed(evt);
            }
        });

        buttonEndTurn.setText("End Turn");
        buttonEndTurn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEndTurnActionPerformed(evt);
            }
        });

        buttonActiveMission.setText("Active Missions");
        buttonActiveMission.setEnabled(false);
        buttonActiveMission.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActiveMissionActionPerformed(evt);
            }
        });

        buttonStats.setText("Game Stats");
        buttonStats.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(buttonActiveMission))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonStats, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonQuit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                            .addComponent(buttonSave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                            .addComponent(buttonEndTurn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                            .addComponent(buttonOptions, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                            .addComponent(buttonFaction, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                            .addComponent(buttonMap, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                            .addComponent(buttonMission, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonMap)
                .addGap(30, 30, 30)
                .addComponent(buttonMission)
                .addGap(18, 18, 18)
                .addComponent(buttonActiveMission)
                .addGap(35, 35, 35)
                .addComponent(buttonFaction)
                .addGap(26, 26, 26)
                .addComponent(buttonOptions)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonStats)
                .addGap(32, 32, 32)
                .addComponent(buttonEndTurn)
                .addGap(91, 91, 91)
                .addComponent(buttonSave)
                .addGap(18, 18, 18)
                .addComponent(buttonQuit)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        labelMap.setText("Map Field");

        labelFactionCaption.setText("Current Faction:");

        labelCurrentFactionNameValue.setText("currFacName");

        labelCurrentTurn.setText("Current Turn:");

        labelCurrentTurnValue.setText("currTurn");

        labelMaxTurn.setText("Max Turn:");

        labelMaxTurnValue.setText("maxTurn");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelMap, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelCurrentTurn)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelFactionCaption)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelCurrentTurnValue)
                                    .addComponent(labelCurrentFactionNameValue))))
                        .addGap(58, 58, 58)
                        .addComponent(labelMaxTurn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelMaxTurnValue)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelFactionCaption)
                            .addComponent(labelCurrentFactionNameValue))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCurrentTurn)
                            .addComponent(labelCurrentTurnValue)
                            .addComponent(labelMaxTurn)
                            .addComponent(labelMaxTurnValue))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelMap, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMapActionPerformed
        displayLocationMenu();
    }//GEN-LAST:event_buttonMapActionPerformed

    private void buttonFactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFactionActionPerformed
			displayFactionMenu();
    }//GEN-LAST:event_buttonFactionActionPerformed

    private void buttonQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonQuitActionPerformed
        quit();
    }//GEN-LAST:event_buttonQuitActionPerformed


    private void buttonEndTurnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEndTurnActionPerformed
			nextTurn();
    }//GEN-LAST:event_buttonEndTurnActionPerformed

    private void buttonMissionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMissionActionPerformed
    	// TODO come back to and show mission screen?
//        MissionMenu mm = new MissionMenu(cabal, this);
//        mm.setVisible(true);
//        this.setVisible(false);
    }//GEN-LAST:event_buttonMissionActionPerformed

    private void buttonActiveMissionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActiveMissionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonActiveMissionActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonActiveMission;
    private javax.swing.JButton buttonEndTurn;
    private javax.swing.JButton buttonFaction;
    private javax.swing.JButton buttonMap;
    private javax.swing.JButton buttonMission;
    private javax.swing.JButton buttonOptions;
    private javax.swing.JButton buttonQuit;
    private javax.swing.JButton buttonSave;
    private javax.swing.JButton buttonStats;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelCurrentFactionNameValue;
    private javax.swing.JLabel labelCurrentTurn;
    private javax.swing.JLabel labelCurrentTurnValue;
    private javax.swing.JLabel labelFactionCaption;
    private javax.swing.JLabel labelMap;
    private javax.swing.JLabel labelMaxTurn;
    private javax.swing.JLabel labelMaxTurnValue;
    // End of variables declaration//GEN-END:variables

    private void nextTurn() {
    	boolean result = cabal.nextStep(false); // check?
    	System.out.println(result);
    	if (result == true){
    		updateLabels();
    	}
    	else{
    		createVictory(cabal.getScoreborad());
    	}
    }

    public void updateLabels()  {
    	labelCurrentFactionNameValue.setText(cabal.getCurrentStepFaction().getName());
    	labelCurrentTurnValue.setText(cabal.getCurrentTurnValue() + "");
    }

    public void displayMessages() {
    	List<String> messages = cabal.getCurrentStepFactionMessages();
    	if (messages == null) return;
    	
    	String displayMessage = "";
    	for (String message : messages) {
    		displayMessage += message + "\n";
    	}
    	if (!displayMessage.isEmpty()) {
    		JOptionPane.showMessageDialog(this, displayMessage);
    	}
    }
    
    private void displayFactionMenu() {
    	FactionMenu fm = new FactionMenu(cabal, cabal.getMyFaction(), this);
        this.setVisible(false);
        fm.setVisible(true);        
    }
    
    public void quit() {
    	this.dispose();
    	cabal.quit();
    }
    
    private void displayLocationMenu() {
    	LocationMenu lm = new LocationMenu(cabal, cabal.getTopLevel(), this);
        lm.setVisible(true);
        this.setVisible(false);
    }

	public void enableScreens(boolean myTurn) {
		this.myTurn = myTurn;
		buttonEndTurn.setEnabled(myTurn);
	}

	public boolean myTurn() {
		return myTurn;
	}

	public void createVictory(List<String> scoreboard) {
		VictoryScreen vm = new VictoryScreen(cabal);
		vm.displayResults(scoreboard);
		vm.setVisible(true);
		this.dispose();		
	}

}
